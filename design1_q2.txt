/*
*************Time complexity******************
Push() - O(1)
Pop() - O(1)
top() - O(1)
getMin() - O(1)
*************Space complexity *****************
O(N)
*/
class MinStack {
    stack<int> s;
    stack<int> s_min;
public:
    /** initialize your data structure here. */
    MinStack() {
        
    }
    
    void push(int val) {        
        s.push(val);
        if (s_min.empty() || s_min.top() >= val) s_min.push(val);
    }
    
    void pop() {
        if (s_min.top() == s.top()){
            s.pop();
            s_min.pop();
        }
        else s.pop();
    }
    
    int top() {
        return s.top();
    }
    
    int getMin() {
        return s_min.top();
    }
};

/**
 * Your MinStack object will be instantiated and called as such:
 * MinStack* obj = new MinStack();
 * obj->push(val);
 * obj->pop();
 * int param_3 = obj->top();
 * int param_4 = obj->getMin();
 */
