//TIME COMPLEXITY: O(1)
//SPACE COMPLEXITY: O(n)
//code running on leetcode: yes
class MinStack {
    /** initialize your data structure here. */
    Stack<Integer> stk;
    //declare min variable
    int min;
    public MinStack() {
        //instance of the stack
        stk = new Stack<>();
        //initialize min to infinite
        min = Integer.MAX_VALUE;
    }
    
    public void push(int val) {
        //compare val and current min
        if (val <= min)
        {
            //push the current min value to stack
            stk.push(min);
            //update the min value
            min = val;
        }
        //push val to stack
        stk.push(val);   
    }
    
    public void pop() {
        int top = stk.pop();
        if (top == min)
        {
            //pop the next element (which was the previous min) and update the min value
            min = stk.pop();
        }
    }
    
    public int top() {
        //returns top of the stack without removing it
        return stk.peek();
    }
    
    public int getMin() {
        return min; 
    }
}
