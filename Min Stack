// Time Complexity : O(1)
// Space Complexity :O(n)
// Did this code successfully run on Leetcode: yes
// Any problem you faced while coding this : No


// Your code here along with comments explaining your approachclass MinStack {
    
    Stack<Int> stack;
    Stack<Int> minStack;

    /** initialize your data structure here. */
    public MinStack() {
        stack = new Stack<>();
        minStack = new Stack<>();
        
    }
    
    public void push(int x) {
         stack.push(x);
        if (minStack.isEmpty() || x <= minStack.peek()) {
            minStack.push(x);
        }
        
    }
    
    public void pop() {
        if (stack.peek().equals(minStack.peek())) minStack.pop();
        stack.pop();
        
    }
    
    public int top() {
        return stack.peek();
        
    }
    
    public int getMin() {
        return minStack.peek();
        
    }
}

/**
 * Your MinStack object will be instantiated and called as such:
 * MinStack obj = new MinStack();
 * obj.push(x);
 * obj.pop();
 * int param_3 = obj.top();
 * int param_4 = obj.getMin();
 */
