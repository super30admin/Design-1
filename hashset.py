# -*- coding: utf-8 -*-
"""Hashset.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1x1hdhaqNEa4063QkejDZkgdcmKM9ZCem
"""

class MyHashSet:

    def __init__(self):
        """
        Initialize your data structure here.
        """
        self.buckets = 1000
        self.bucketItems = 1000
        self.storage = [None] * self.buckets


    def bucketKey (self,key):
        return key % self.buckets

    def bucketItemKey(self,key):
        return key // self.bucketItems



    def add(self, key: int) -> None:

        bucket  = self.bucketKey(key)
        bucketItem = self.bucketItemKey(key)
        
        if (self.storage[bucket] is  None):
            if (bucket == 0):
                self.storage[bucket] = [False]*(self.bucketItems + 1)
            else: 
                self.storage[bucket] = [False] * (self.bucketItems)

        self.storage[bucket][bucketItem] = True

        #TC : O(1)

    

    def remove(self, key: int) -> None:

        bucket = self.bucketKey(key)
        bucketItem = self.bucketItemKey(key)

        if (self.storage[bucket] == None):
            return
        elif (self.storage[bucket][bucketItem] == False):
            return
        else:
            self.storage[bucket][bucketItem] = False

        #TC : O(1)
        

    def contains(self, key: int) -> bool:
        """
        Returns true if this set contains the specified element
        """

        bucket = self.bucketKey(key)
        bucketItem = self.bucketItemKey(key)

        if(self.storage[bucket] is not None and self.storage[bucket][bucketItem] is not False):
            return True
        return False

        #TC:O(1)


#SC : O(N)    


# Your MyHashSet object will be instantiated and called as such:
# obj = MyHashSet()
# obj.add(key)
# obj.remove(key)
# param_3 = obj.contains(key)