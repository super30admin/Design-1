# -*- coding: utf-8 -*-
"""Hashset without in built lib.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/166akGF2YGwcXhLClFYRzuE3p0p3Tliqs
"""
class MyHashSet:

    def __init__(self):
        
        self.buckets = 1000
        self.bucketItems = 1000
        self.storage = [None] * self.buckets
        
    def getBucket(self, key):
        return key % self.buckets

    def getBucketItem(self, key):
        return key // self.bucketItems
        

    def add(self, key):
        bucket = self.getBucket(key)
        bucketItem = self.getBucketItem(key)
        if not self.storage[bucket] and bucket == 0:
            self.storage[bucket] = [False] * (self.bucketItems + 1)
        elif not self.storage[bucket]:
            self.storage[bucket] = [False] * (self.bucketItems)
        self.storage[bucket][bucketItem] = True
    
    def remove(self, key):
        bucket = self.getBucket(key)
        bucketItem = self.getBucketItem(key)
        if self.storage[bucket]:
            self.storage[bucket][bucketItem] = False        

    def contains(self, key):
        bucket = self.getBucket(key)
        bucketItem = self.getBucketItem(key)
        if self.storage[bucket]:
            return self.storage[bucket][bucketItem]
        else:
            return False
        

# Your MyHashSet object will be instantiated and called as such:
obj = MyHashSet()
obj.add(1)
obj.add(2)
param_1 = obj.contains(1)
print("contains 1:", param_1)
param_2 = obj.contains(3)
print("contains 3:", param_2)
obj.add(2)
param_3 = obj.contains(2)
print("contains 2:", param_3)
obj.remove(2)
param_4 = obj.contains(2)
print("contains 2:", param_4)
